{% extends "_layout.jinja2" %}

{% block title %}
    {% if channel.id == None %}
        Créer un canal médias
    {% else %}
        Modifier un canal médias
    {% endif %}
{% endblock %}

{% block content %}
    <div class="container">
        <div class="row">
            <div class="col-10">
                {% if channel.id == None %}
                    <h1>Nouveau canal média</h1>
                {% else %}
                    <h1>Modifier un canal média</h1>
                    <h2>{{ channel.name }}</h2>
                {% endif %}
            </div>
            <div class="col-2 text-end">
                <a href="{{ url_for("channels.channelsMedias", show_guid=show.id) }}" class="btn btn-sm btn-outline-secondary"><i class="bi bi-arrow-left"></i> Retour</a>
            </div>
        </div>
        {% if channel.id == None %}
            <p class="lead">
                Entrez ici les détails de ce tout nouveau canal.
            </p>
        {% else %}
            <p class="lead">
                Ici, vous pouvez consulter et modifier les détails du canal médias {{ channel.name }}.
            </p>
        {% endif %}

        <form action="" method="post">
            <fieldset>
                <legend>Général</legend>

                <div class="mb-3 row">
                    {{ form.name.label(class="col-form-label col-sm-3") }}
                    <div class="col-sm-9">
                        {{ form.name(class="form-control") }}
                        {% if form.name.description %}<div class="form-text">{{ form.name.description }}</div>{% endif %}
                    </div>
                </div>

                <div class="mb-3 row">
                    {{ form.description.label(class="col-form-label col-sm-3") }}
                    <div class="col-sm-9">
                        {{ form.description(class="form-control") }}
                        {% if form.description.description %}<div class="form-text">{{ form.description.description }}</div>{% endif %}
                    </div>
                </div>

            </fieldset>

            <fieldset>
                <legend>Avancé</legend>


                <div class="mb-3 row">
                    {{ form.width.label(class="col-form-label col-sm-3") }}
                    <div class="col-sm-9">
                        <div class="input-group">
                            {{ form.width(class="form-control") }}
                            <span class="input-group-text">x</span>
                            {{ form.height(class="form-control") }}
                        </div>
                        {% if form.description.description %}<div class="form-text">{{ form.width.description }}</div>{% endif %}
                    </div>
                </div>

                <div class="mb-3 row">
                    {{ form.customCSS.label(class="col-form-label col-sm-3") }}
                    <div class="col-sm-9">
                        {{ form.customCSS(class="form-control", rows=24, style="font-family: monospace; font-size: 75%; white-space: nowrap; overflow-x: auto;") }}
                        {% if form.customCSS.description %}<div class="form-text">{{ form.customCSS.description }}</div>{% endif %}
                    </div>
                </div>

            </fieldset>

            <div class="mb-3 row">
                {{ form.defaultEnable.label(class="col-form-label col-sm-3") }}
                <div class="col-sm-9">
                    {{ form.defaultEnable(class="form-check-input") }}
                    {{ form.defaultEnable.label(class="form-check-label") }}
                    {% if form.defaultEnable.description %}<div class="form-text">{{ form.defaultEnable.description }}</div>{% endif %}
                </div>
            </div>

            <div class="col-12">
                {{ form.hidden_tag() }}
                {{ form.id }}
                {{ form.submit(class="btn btn-primary") }}
            </div>
        </form>




        <script>
            // Récupérer l'élément textarea
            var textarea = document.getElementById("customCSS");

            // Ajouter un écouteur d'événement pour intercepter la pression de touche
            textarea.addEventListener("keydown", function(event) {
                // Vérifier si la touche pressée est la touche Tab
                if (event.key === "Tab") {
                    // Empêcher le comportement par défaut de la touche Tab
                    event.preventDefault();
                    
                    // Insérer quatre espaces dans le texte du textarea à la position actuelle du curseur
                    var start = this.selectionStart;
                    var end = this.selectionEnd;
                    var text = this.value;
                    var newText = text.substring(0, start) + "    " + text.substring(end);
                    
                    // Mettre à jour le texte du textarea avec les espaces insérées
                    this.value = newText;
                    
                    // Déplacer le curseur après les espaces insérées
                    this.selectionStart = this.selectionEnd = start + 2;
                } else if (event.key === "Enter") {
                    // Empêcher le comportement par défaut de la touche Entrée
                    event.preventDefault();
                    
                    // Récupérer la position du curseur
                    var start = this.selectionStart;
                    
                    // Récupérer le texte avant et après la position du curseur
                    var textBeforeCursor = this.value.substring(0, start);
                    var textAfterCursor = this.value.substring(start);
                    
                    // Trouver le niveau de tabulation du texte avant le curseur
                    var tabLevel = 0;
                    var lines = textBeforeCursor.split("\n");
                    var lastLine = lines[lines.length - 1];
                    for (var i = 0; i < lastLine.length; i++) {
                        if (lastLine[i] === " ") {
                            tabLevel++;
                        } else {
                            break;
                        }
                    }
                    
                    // Insérer une nouvelle ligne avec le même niveau de tabulation
                    var newLine = "\n" + " ".repeat(tabLevel);
                    
                    // Mettre à jour le texte du textarea avec la nouvelle ligne et déplacer le curseur
                    this.value = textBeforeCursor + newLine + textAfterCursor;
                    this.selectionStart = this.selectionEnd = start + newLine.length;
                }
            });
        </script>

        
    </div>
{% endblock %}